import { marked } from 'marked';

interface AIAnalysis {
  channel_overview?: {
    summary?: string;
    key_metrics?: {
      avg_views?: number;
      total_views?: number;
      top_performing_video?: string;
      content_consistency?: string;
    };
  };
  keyword_insights?: {
    trending_keywords?: string[];
    analysis?: string;
    recommended_keywords?: string[];
  };
  content_strategy?: {
    recommended_topics?: string[];
    content_formats?: string[];
    strategy_analysis?: string;
  };
  engagement_patterns?: {
    high_performance_characteristics?: string[];
    analysis?: string;
  };
  growth_strategy?: {
    short_term?: string[];
    long_term?: string[];
    analysis?: string;
  };
  [key: string]: unknown;
}

export function convertAIAnalysisToMarkdown(aiAnalysis: AIAnalysis): string {
  const sections: string[] = [];
  
  sections.push('# üìä AI Î∂ÑÏÑù Î≥¥Í≥†ÏÑú\n');
  
  // Ï±ÑÎÑê Í∞úÏöî
  if (aiAnalysis.channel_overview) {
    sections.push('## üè¢ Ï±ÑÎÑê Í∞úÏöî\n');
    
    if (aiAnalysis.channel_overview.summary) {
      sections.push(`${aiAnalysis.channel_overview.summary}\n`);
    }
    
    if (aiAnalysis.channel_overview.key_metrics) {
      const metrics = aiAnalysis.channel_overview.key_metrics;
      sections.push('### Ï£ºÏöî ÏßÄÌëú\n');
      
      if (metrics.avg_views) {
        sections.push(`- **ÌèâÍ∑† Ï°∞ÌöåÏàò**: ${metrics.avg_views.toLocaleString()}`);
      }
      if (metrics.total_views) {
        sections.push(`- **Ï¥ù Ï°∞ÌöåÏàò**: ${metrics.total_views.toLocaleString()}`);
      }
      if (metrics.top_performing_video) {
        sections.push(`- **ÏµúÍ≥† ÏÑ±Í≥º**: ${metrics.top_performing_video}`);
      }
      
      if (metrics.content_consistency) {
        sections.push(`\n**ÏΩòÌÖêÏ∏† ÏùºÍ¥ÄÏÑ±**\n${metrics.content_consistency}\n`);
      }
    }
  }
  
  // ÌÇ§ÏõåÎìú Ïù∏ÏÇ¨Ïù¥Ìä∏
  if (aiAnalysis.keyword_insights) {
    sections.push('## üî§ ÌÇ§ÏõåÎìú Ïù∏ÏÇ¨Ïù¥Ìä∏\n');
    
    if (aiAnalysis.keyword_insights.trending_keywords && aiAnalysis.keyword_insights.trending_keywords.length > 0) {
      sections.push('### Ìä∏Î†åÎî© ÌÇ§ÏõåÎìú\n');
      const keywords = aiAnalysis.keyword_insights.trending_keywords.map(k => `\`${k}\``).join(', ');
      sections.push(`${keywords}\n`);
    }
    
    if (aiAnalysis.keyword_insights.analysis) {
      sections.push('### ÌÇ§ÏõåÎìú Î∂ÑÏÑù\n');
      sections.push(`${aiAnalysis.keyword_insights.analysis}\n`);
    }
    
    if (aiAnalysis.keyword_insights.recommended_keywords && aiAnalysis.keyword_insights.recommended_keywords.length > 0) {
      sections.push('### Ï∂îÏ≤ú ÌÇ§ÏõåÎìú\n');
      const recommended = aiAnalysis.keyword_insights.recommended_keywords.map(k => `\`${k}\``).join(', ');
      sections.push(`${recommended}\n`);
    }
  }
  
  // ÏΩòÌÖêÏ∏† Ï†ÑÎûµ
  if (aiAnalysis.content_strategy) {
    sections.push('## üìù ÏΩòÌÖêÏ∏† Ï†ÑÎûµ\n');
    
    if (aiAnalysis.content_strategy.recommended_topics && aiAnalysis.content_strategy.recommended_topics.length > 0) {
      sections.push('### Ï∂îÏ≤ú Ï£ºÏ†ú\n');
      aiAnalysis.content_strategy.recommended_topics.forEach(topic => {
        sections.push(`- ${topic}`);
      });
      sections.push('');
    }
    
    if (aiAnalysis.content_strategy.content_formats && aiAnalysis.content_strategy.content_formats.length > 0) {
      sections.push('### ÏΩòÌÖêÏ∏† ÌòïÏãù\n');
      aiAnalysis.content_strategy.content_formats.forEach(format => {
        sections.push(`- ${format}`);
      });
      sections.push('');
    }
    
    if (aiAnalysis.content_strategy.strategy_analysis) {
      sections.push('### Ï†ÑÎûµ Î∂ÑÏÑù\n');
      sections.push(`${aiAnalysis.content_strategy.strategy_analysis}\n`);
    }
  }
  
  // Ï∞∏Ïó¨ Ìå®ÌÑ¥
  if (aiAnalysis.engagement_patterns) {
    sections.push('## üìà Ï∞∏Ïó¨ Ìå®ÌÑ¥\n');
    
    if (aiAnalysis.engagement_patterns.high_performance_characteristics && aiAnalysis.engagement_patterns.high_performance_characteristics.length > 0) {
      sections.push('### Í≥†ÏÑ±Í≥º ÌäπÏÑ±\n');
      aiAnalysis.engagement_patterns.high_performance_characteristics.forEach(char => {
        sections.push(`- ${char}`);
      });
      sections.push('');
    }
    
    if (aiAnalysis.engagement_patterns.analysis) {
      sections.push('### Ï∞∏Ïó¨ Î∂ÑÏÑù\n');
      sections.push(`${aiAnalysis.engagement_patterns.analysis}\n`);
    }
  }
  
  // ÏÑ±Ïû• Ï†ÑÎûµ
  if (aiAnalysis.growth_strategy) {
    sections.push('## üöÄ ÏÑ±Ïû• Ï†ÑÎûµ\n');
    
    if (aiAnalysis.growth_strategy.short_term && aiAnalysis.growth_strategy.short_term.length > 0) {
      sections.push('### Îã®Í∏∞ Ï†ÑÎûµ\n');
      aiAnalysis.growth_strategy.short_term.forEach(strategy => {
        sections.push(`- ${strategy}`);
      });
      sections.push('');
    }
    
    if (aiAnalysis.growth_strategy.long_term && aiAnalysis.growth_strategy.long_term.length > 0) {
      sections.push('### Ïû•Í∏∞ Ï†ÑÎûµ\n');
      aiAnalysis.growth_strategy.long_term.forEach(strategy => {
        sections.push(`- ${strategy}`);
      });
      sections.push('');
    }
    
    if (aiAnalysis.growth_strategy.analysis) {
      sections.push('### ÏÑ±Ïû• Î∂ÑÏÑù\n');
      sections.push(`${aiAnalysis.growth_strategy.analysis}\n`);
    }
  }
  
  return sections.join('\n');
}

export async function convertMarkdownToHTML(markdown: string): Promise<string> {
  // Configure marked for better output
  marked.setOptions({
    gfm: true,
    breaks: true,
  });
  
  return await marked(markdown);
}